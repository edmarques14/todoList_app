{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","addTask","className","onSubmit","htmlFor","type","id","onChange","Component","Todo","isEditing","toggleForm","handleUpdate","handleCompletion","toggleCompletion","updateTask","completed","onClick","class","deleteTask","TodoList","todos","newTodo","uuidv4","st","filter","td","updatedTask","updatedTodos","map","todo","todoList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.503ae81a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './NewTodoForm.css';\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { task: \"\" }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        const addTask = this.props.addTask;\r\n        addTask(this.state)\r\n        this.setState({ task: \"\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form\r\n                    className=\"NewTodoForm\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <label htmlFor=\"task\">New Todo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"task\"\r\n                        name='task'\r\n                        value={this.state.task}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NewTodoForm;","import React, { Component } from 'react'\r\nimport './Todo.css'\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false, task: this.props.task\r\n        }\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleCompletion = this.handleCompletion.bind(this);\r\n    }\r\n    handleCompletion(evt) {\r\n        this.props.toggleCompletion();\r\n    }\r\n    handleUpdate(evt) {\r\n        evt.preventDefault();\r\n        this.props.updateTask(this.props.id, this.state.task);\r\n        this.setState({ isEditing: false });\r\n\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    toggleForm() {\r\n        this.setState({ isEditing: !this.state.isEditing })\r\n    }\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form\r\n                        className=\"Todo-edit-form\"\r\n                        onSubmit={this.handleUpdate}\r\n                    >\r\n                        <input\r\n                            name=\"task\"\r\n                            type=\"text\"\r\n                            value={this.state.task}\r\n                            key={this.props.id}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <li\r\n                        className={this.props.completed ? 'Todo-task completed' : \"Todo-task\"}\r\n                        onClick={this.handleCompletion}\r\n                    >\r\n                        {this.props.task}\r\n                    </li>\r\n                    <div className=\"Todo-buttons\">\r\n                        <button onClick={this.toggleForm}><i class='fas fa-pen' /></button>\r\n                        <button onClick={this.props.deleteTask}><i class='fas fa-trash' /></button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default Todo;","import React, { Component } from 'react'\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './TodoList.css';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: []\r\n        }\r\n        this.addTask = this.addTask.bind(this);\r\n        this.updateTask = this.updateTask.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this)\r\n    }\r\n    addTask(task) {\r\n        let newTodo = { ...task, id: uuidv4(), completed: false };\r\n        this.setState(st => ({\r\n            todos: [...st.todos, newTodo]\r\n        }))\r\n    }\r\n    deleteTask(id) {\r\n        this.setState({ todos: this.state.todos.filter(td => td.id !== id) });\r\n    }\r\n    updateTask(id, updatedTask) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, task: updatedTask }\r\n            }\r\n            return todo;\r\n        })\r\n        this.setState({ todos: updatedTodos });\r\n    }\r\n    toggleCompletion(id) {\r\n        const updatedTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, completed: !todo.completed }\r\n            }\r\n            return todo;\r\n        })\r\n        this.setState({ todos: updatedTodos });\r\n    }\r\n    render() {\r\n        const todoList = this.state.todos.map(td => (\r\n            <Todo\r\n                task={td.task}\r\n                key={td.id}\r\n                id={td.id}\r\n                deleteTask={() => this.deleteTask(td.id)}\r\n                updateTask={this.updateTask}\r\n                completed={td.completed}\r\n                toggleCompletion={() => this.toggleCompletion(td.id)}\r\n            />\r\n        ))\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1>Todo List! <span>A Simple React Todo List App</span></h1>\r\n\r\n                <ul>\r\n                    {todoList}\r\n                </ul>\r\n                <NewTodoForm\r\n                    addTask={this.addTask}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList;","import './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}